@startuml

hide footbox

actor Utilisateur as User

' Définition des participants
participant "AppIoT\n[AppIoT.java]" as AppIoT
participant "AppMainFrame\n[AppMainFrame.java]" as AppMainFrame
participant "AppMainFrameViewController\n[AppMainFrameViewController.java]" as AppMainFrameVC
participant "Am107BorderPane\n[Am107BorderPane.java]" as Am107BorderPane
participant "Am107ViewController\n[Am107ViewController.java]" as Am107VC
database "resultatAM107.json\n[IoT/resultat/resultatAM107.json]" as ResultatJSON

' Démarrage de l'application
AppIoT -> AppMainFrame : runApp()
AppMainFrame -> AppMainFrame : start(primaryStage)
AppMainFrame -> AppMainFrameVC : initContext(primaryStage, this)
AppMainFrameVC -> AppMainFrameVC : initialize()

' Interaction utilisateur pour lancer AM107
User -> AppMainFrameVC : doLaunchAM107()
AppMainFrameVC -> AppMainFrame : am107Display(config)
AppMainFrame -> Am107BorderPane : new Am107BorderPane(primaryStage)
Am107BorderPane -> Am107VC : initContext(am107Stage, this)
Am107BorderPane -> Am107VC : displayDialog(config)
Am107VC -> ResultatJSON : loadSallesEtCapteursFromResultatJSON()
ResultatJSON --> Am107VC : Données des capteurs
Am107VC -> Am107VC : initializeGraphiquesParCapteur()
Am107VC -> User : Affichage des graphiques

' Rafraîchissement des graphiques
loop Toutes les frequence secondes
    Am107BorderPane -> Am107VC : refreshGraphiques()
    Am107VC -> ResultatJSON : loadSallesEtCapteursFromResultatJSON()
    ResultatJSON --> Am107VC : Nouvelles données
    Am107VC -> Am107VC : Mise à jour des graphiques
end
@enduml